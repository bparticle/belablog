---
import { getCollection } from 'astro:content';

// Get all posts for archives and tags
const posts = await getCollection('posts');
const categories = await getCollection('categories');

// Group posts by year for archives
const postsByYear = posts.reduce((acc, post) => {
  const year = post.data.date.getFullYear();
  if (!acc[year]) acc[year] = [];
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof posts>);

// Get all unique tags
const allTags = new Set<string>();
posts.forEach(post => {
  if (post.data.tags) {
    post.data.tags.forEach(tag => allTags.add(tag));
  }
});

const sortedTags = Array.from(allTags).sort();
---

<aside class="right-sidebar">

  <!-- Archives Section -->
  <div class="widget-section">
    <h3 class="widget-title">
      <svg class="widget-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M21 8v13H3V8"/>
        <path d="M1 3h22v5H1z"/>
        <path d="M10 12h4"/>
      </svg>
      ARCHIVES
    </h3>
    <ul class="archives-list">
      {Object.entries(postsByYear)
        .sort(([a], [b]) => parseInt(b) - parseInt(a))
        .map(([year, yearPosts]) => (
          <li class="archive-item">
            <a href={`/archives#${year}`} class="archive-link">
              {year}
              <span class="archive-count">({yearPosts.length})</span>
            </a>
          </li>
        ))}
    </ul>
  </div>

  <!-- Categories Section -->
  <div class="widget-section">
    <h3 class="widget-title">
      <svg class="widget-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"/>
        <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"/>
      </svg>
      CATEGORIES
    </h3>
    <div class="categories-grid">
      {categories.map((category) => (
        <a href={`/categories/${category.id}`} class="category-button">
          {category.data.title}
        </a>
      ))}
    </div>
  </div>

  <!-- Tags Section -->
  <div class="widget-section">
    <h3 class="widget-title">
      <svg class="widget-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"/>
        <line x1="7" y1="7" x2="7.01" y2="7"/>
      </svg>
      TAGS
    </h3>
    <div class="tags-grid">
      {sortedTags.map((tag) => (
        <span class="tag-button">{tag}</span>
      ))}
    </div>
  </div>
</aside>

<style>
  .right-sidebar {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .search-section {
    margin-bottom: 1rem;
  }

  .search-container {
    position: relative;
  }

  .search-input {
    width: 100%;
    padding: 0.75rem 1rem;
    padding-right: 2.5rem;
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    background: var(--card-bg);
    color: var(--body-text-color);
    font-size: 0.875rem;
    transition: all 0.2s ease;
  }

  .search-input:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .search-input::placeholder {
    color: var(--muted-text);
  }

  .search-icon {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    color: var(--muted-text);
  }

  .widget-section {
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 1.5rem;
  }

  .widget-section:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }

  .widget-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    color: var(--body-text-color);
    margin: 0 0 1rem 0;
  }

  .widget-icon {
    width: 16px;
    height: 16px;
    color: var(--accent-color);
  }

  .archives-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .archive-item {
    margin-bottom: 0.5rem;
  }

  .archive-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
    color: var(--body-text-color);
    text-decoration: none;
    font-size: 0.875rem;
    transition: color 0.2s ease;
  }

  .archive-link:hover {
    color: var(--accent-color);
  }

  .archive-count {
    color: var(--muted-text);
    font-size: 0.75rem;
  }

  .categories-grid {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .category-button {
    display: inline-block;
    padding: 0.5rem 0.75rem;
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 0.375rem;
    color: var(--body-text-color);
    text-decoration: none;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    text-align: center;
  }

  .category-button:hover {
    background: var(--accent-color);
    color: white;
    border-color: var(--accent-color);
  }

  .tags-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag-button {
    display: inline-block;
    padding: 0.375rem 0.75rem;
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 0.375rem;
    color: var(--body-text-color);
    font-size: 0.75rem;
    transition: all 0.2s ease;
  }

  .tag-button:hover {
    background: var(--accent-color);
    color: white;
    border-color: var(--accent-color);
  }
</style> 