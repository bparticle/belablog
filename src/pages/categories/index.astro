---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';

const categories = await getCollection('categories');
const posts = await getCollection('posts');

// Count posts per category
const categoryCounts = new Map();
posts.forEach(post => {
  if (post.data.categories) {
    post.data.categories.forEach(category => {
      const count = categoryCounts.get(category) || 0;
      categoryCounts.set(category, count + 1);
    });
  }
});
---

<Layout title="Categories - BÃ©la's Blog" description="Browse posts by category">
  <Header />
  
  <main class="main-content">
    <div class="container">
      <section class="categories-page">
        <h1 class="page-title">Categories</h1>
        <p class="page-description">Browse posts by category</p>
        
        <div class="categories-grid">
          {categories.map((category) => {
            const postCount = categoryCounts.get(category.data.title) || 0;
            return (
              <a href={`/categories/${category.id}`} class="category-card">
                <div class="category-content">
                  <h3 class="category-title">{category.data.title}</h3>
                  {category.data.description && (
                    <p class="category-description">{category.data.description}</p>
                  )}
                  <div class="category-count">{postCount} posts</div>
                </div>
              </a>
            );
          })}
        </div>
      </section>
    </div>
  </main>
  
  <Footer />
</Layout>

<style>
  .main-content {
    min-height: calc(100vh - 200px);
  }

  .categories-page {
    padding: 2rem 0;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 1rem 0;
    color: var(--body-text-color);
  }

  .page-description {
    font-size: 1.125rem;
    color: #6b7280;
    margin: 0 0 3rem 0;
  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .category-card {
    background: var(--body-bg-color);
    border: 1px solid #e5e7eb;
    border-radius: 0.75rem;
    padding: 2rem;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    text-decoration: none;
  }

  .category-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .category-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--body-text-color);
  }

  .category-description {
    margin: 0 0 1rem 0;
    color: #6b7280;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  .category-count {
    font-size: 0.875rem;
    color: var(--accent-color);
    font-weight: 500;
  }

  @media (max-width: 768px) {
    .page-title {
      font-size: 2rem;
    }

    .categories-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 