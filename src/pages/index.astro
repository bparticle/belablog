---
import Layout from '../layouts/Layout.astro';
import LeftSidebar from '../components/LeftSidebar.astro';
import RightSidebar from '../components/RightSidebar.astro';
import { getCollection } from 'astro:content';

// Get all posts, sorted by date
const allPosts = await getCollection('posts');
const posts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Get categories
const categories = await getCollection('categories');
---

<Layout title="Béla's Blog" description="Allemaal dingetjes die Béla doet">
  <div class="main-layout">
    <LeftSidebar />
    
    <main class="main-content">
      <div class="posts-grid">
        {posts.map((post) => (
          <article class="post-card">
            {post.data.image && (
              <div class="post-image">
                <img src={`/posts/${post.slug}/${post.data.image}`} alt={post.data.title} />
              </div>
            )}
            <div class="post-content">
              <div class="post-meta">
                <time datetime={post.data.date.toISOString()}>
                  {post.data.date.toLocaleDateString('nl-NL', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="post-tags">
                    {post.data.tags.map((tag) => (
                      <span class="tag">{tag}</span>
                    ))}
                  </div>
                )}
              </div>
              <h3 class="post-title">
                <a href={`/posts/${post.slug}`}>{post.data.title}</a>
              </h3>
              {post.data.description && (
                <p class="post-description">{post.data.description}</p>
              )}
            </div>
          </article>
        ))}
      </div>
    </main>
    
    <RightSidebar />
  </div>
</Layout>

<style>
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }

  .post-card {
    background: var(--body-bg-color);
    border: 1px solid #e5e7eb;
    border-radius: 0.75rem;
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .post-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .post-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .post-content {
    padding: 1.5rem;
  }

  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: #6b7280;
  }

  .post-tags {
    display: flex;
    gap: 0.5rem;
  }

  .tag {
    background: rgba(59, 130, 246, 0.1);
    color: var(--accent-color);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
  }

  .post-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .post-title a {
    color: var(--body-text-color);
  }

  .post-title a:hover {
    color: var(--accent-color);
  }

  .post-description {
    margin: 0;
    color: #6b7280;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  @media (max-width: 768px) {
    .posts-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 