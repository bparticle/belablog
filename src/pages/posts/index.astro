---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

// Get all posts, sorted by date
const posts = await getCollection('posts');
const sortedPosts = posts.sort((a, b) => new Date(b.data.date) - new Date(a.data.date));
---

<Layout 
  title="All Posts - Béla's Blog"
  description="All posts from Béla's blog"
>
  <Header />
  
  <main class="main-content">
    <div class="container">
      <header class="page-header">
        <h1 class="page-title">All Posts</h1>
        <p class="page-description">All {sortedPosts.length} posts from Béla's blog</p>
      </header>
      
      <div class="posts-grid">
        {sortedPosts.map((post) => (
          <article class="post-card">
            <div class="post-card-content">
              <header class="post-card-header">
                <div class="post-meta">
                  <time datetime={post.data.date.toISOString()}>
                    {post.data.date.toLocaleDateString('nl-NL', {
                      year: 'numeric',
                      month: 'short',
                      day: 'numeric'
                    })}
                  </time>
                  {post.data.categories && post.data.categories.length > 0 && (
                    <div class="post-categories">
                      {post.data.categories.slice(0, 2).map((category) => (
                        <span class="category-tag">{category}</span>
                      ))}
                    </div>
                  )}
                </div>
                
                <h2 class="post-title">
                  <a href={`/posts/${post.slug}`}>{post.data.title}</a>
                </h2>
                
                {post.data.description && (
                  <p class="post-description">{post.data.description}</p>
                )}
              </header>
              
              {post.data.image && (
                <div class="post-image">
                  <a href={`/posts/${post.slug}`}>
                    <img src={`/posts/${post.slug}/${post.data.image}`} alt={post.data.title} />
                  </a>
                </div>
              )}
              
              {post.data.tags && post.data.tags.length > 0 && (
                <footer class="post-footer">
                  <div class="post-tags">
                    {post.data.tags.slice(0, 3).map((tag) => (
                      <span class="tag">{tag}</span>
                    ))}
                    {post.data.tags.length > 3 && (
                      <span class="tag-more">+{post.data.tags.length - 3} more</span>
                    )}
                  </div>
                </footer>
              )}
            </div>
          </article>
        ))}
      </div>
    </div>
  </main>
  
  <Footer />
</Layout>

<style>
  .main-content {
    min-height: calc(100vh - 200px);
  }

  .page-header {
    text-align: center;
    margin-bottom: 3rem;
    padding: 2rem 0;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 1rem 0;
    color: var(--body-text-color);
  }

  .page-description {
    font-size: 1.125rem;
    color: #6b7280;
    margin: 0;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .post-card {
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 0.75rem;
    overflow: hidden;
    transition: all 0.2s ease;
  }

  .post-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .post-card-content {
    padding: 1.5rem;
  }

  .post-card-header {
    margin-bottom: 1rem;
  }

  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: #6b7280;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .post-categories {
    display: flex;
    gap: 0.25rem;
  }

  .category-tag {
    background: var(--accent-color);
    color: white;
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
  }

  .post-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 0.5rem 0;
    line-height: 1.3;
  }

  .post-title a {
    color: var(--body-text-color);
    text-decoration: none;
  }

  .post-title a:hover {
    color: var(--accent-color);
  }

  .post-description {
    font-size: 0.875rem;
    color: #6b7280;
    margin: 0;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .post-image {
    margin: 1rem -1.5rem -1.5rem -1.5rem;
  }

  .post-image img {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .post-footer {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
  }

  .post-tags {
    display: flex;
    gap: 0.25rem;
    flex-wrap: wrap;
  }

  .tag {
    background: rgba(59, 130, 246, 0.1);
    color: var(--accent-color);
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
  }

  .tag-more {
    color: #6b7280;
    font-size: 0.75rem;
    font-style: italic;
  }

  @media (max-width: 768px) {
    .posts-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .page-title {
      font-size: 2rem;
    }

    .post-card-content {
      padding: 1rem;
    }

    .post-meta {
      flex-direction: column;
      align-items: flex-start;
    }
  }
</style> 