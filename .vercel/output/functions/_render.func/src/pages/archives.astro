---
import Base from '@/layouts/Base.astro';
import Section from '@/components/Section.astro';
import { getCollection } from 'astro:content';
import { AppConfig } from '@/utils/AppConfig';

// Get all posts, sorted by date
const allPosts = await getCollection('posts');
const posts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Group posts by year
const postsByYear = new Map<number, typeof posts>();
posts.forEach(post => {
  const year = post.data.date.getFullYear();
  if (!postsByYear.has(year)) {
    postsByYear.set(year, []);
  }
  postsByYear.get(year)!.push(post);
});
---

<Base head={{ title: `Archives | ${AppConfig.title}`, description: AppConfig.description }}>
  <Section>
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold mb-4">Archives</h1>
      <p class="text-xl text-gray-600 dark:text-gray-400">All posts in chronological order</p>
    </div>
    
    <div class="max-w-4xl mx-auto">
      {Array.from(postsByYear.entries()).sort(([a], [b]) => b - a).map(([year, yearPosts]) => (
        <div class="mb-12">
          <h2 class="text-3xl font-bold mb-6 pb-2 border-b-2 border-orange-500">{year}</h2>
          <div class="space-y-6">
            {yearPosts.map((post) => (
              <article class="flex gap-6 p-4 rounded-lg hover:bg-stone-200/50 dark:hover:bg-stone-800/50 transition-colors">
                <div class="min-w-[80px] text-sm text-gray-600 dark:text-gray-400 font-medium">
                  <time datetime={post.data.date.toISOString()}>
                    {post.data.date.toLocaleDateString('nl-NL', {
                      month: 'short',
                      day: 'numeric'
                    })}
                  </time>
                </div>
                <div class="flex-1">
                  <h3 class="text-lg font-semibold mb-2">
                    <a href={`/posts/${post.slug}`} class="hover:text-orange-600 transition-colors">
                      {post.data.title}
                    </a>
                  </h3>
                  {post.data.description && (
                    <p class="text-gray-600 dark:text-gray-400 text-sm mb-2">
                      {post.data.description}
                    </p>
                  )}
                  {post.data.categories && post.data.categories.length > 0 && (
                    <div class="flex gap-2">
                      {post.data.categories.map((category: string) => (
                        <a href={`/categories/${category.toLowerCase()}`} class="bg-orange-600 text-white px-2 py-1 rounded text-xs hover:bg-orange-700 transition-colors">
                          {category}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
              </article>
            ))}
          </div>
        </div>
      ))}
    </div>
  </Section>
</Base> 